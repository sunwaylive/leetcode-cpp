class Point:
    def __init__(self, a = 0, b = 0):
        self.x = a
        self.y = b
    
class Solution:
    def maxPoints(self, points):
        max_num = 0
        for i in range(len(points)):
            p1 = points[i]
            k_b = {}
            for j in range(i+1, len(points)):
                p2 = points[j]
                if p1.x == p2.x:
                    
                else:
                    k = (p1.y - p2.y) / (p1.x - p2.x)
                    b = (p1.x * p2.y - p2.x * p1.y) / (p1.x - p2.y)
                    if k in k_b.keys() && k_b[k] == b:
                        max_num += 1
                    k_b[k] = b;
                    

        
                if p2 == p1:
                    continue
                line_num = 2
                temp1 = (p1.y - p2.y)
                temp2 = (p1.x - p2.x)
                for p in points:
                    if p == p1 or p ==p2:
                        continue
                    if temp1 * (p.x - p1.x) == temp2 * (p.y - p1.y):
                        line_num += 1
                if line_num > max_num:
                    max_num = line_num
        return max_num
    
#main function
sln = Solution()
input_list = [(-54,-297),(-36,-222),(3,-2),(30,53),(-5,1),(-36,-222),(0,2),(1,3),(6,-47),(0,4),(2,3),(5,0),(48,128),(24,28),(0,-5),(48,128),(-12,-122),(-54,-297),(-42,-247),(-5,0),(2,4),(0,0),(54,153),(-30,-197),(4,5),(4,3),(-42,-247),(6,-47),(-60,-322),(-4,-2),(-18,-147),(6,-47),(60,178),(30,53),(-5,3),(-42,-247),(2,-2),(12,-22),(24,28),(0,-72),(3,-4),(-60,-322),(48,128),(0,-72),(-5,3),(5,5),(-24,-172),(-48,-272),(36,78),(-3,3)]
point_list = []
for e in input_list:
    p = Point(e[0], e[1])
    point_list.append(p)
result = sln.maxPoints(point_list)
print(result)
